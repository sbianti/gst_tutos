		Gstreamer 1.0 -- résumer
		¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯

Tout est GstElement:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
Pour obtenir de l'info sur un élément:
     $ gst-inspect «élément»

Ce sont des GObject, donc:
   G_OBJECT_GET(…) et _SET(…) pour manipuler ses propriétés.
[→ section “Element Properties” dans gst-inspect]

   g_signal_connect(element, "signal", G_CALLBACK(callback), …)
[→ section “Element Signals”]

   g_signal_emit_by_name(element, "Action", …) pour appeler d'autres propriétés.
[→ section “Element Actions”]

Mais toutes les infos du stream ne sont pas disponibles par les propriétés de l'objet.
Il faut alors recourir à des requêtes d'un autre type: les “gst_query”.


Le pipeline, le flow:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
Le pipeline, élément central du déroulement d'un processus multimédia passe par les états suivant:
GST_STATE_VOID_PENDING → GST_STATE_NULL
		       → GST_STATE_READY → GST_STATE_PAUSED → GST_STATE_PLAYING

Certaines opérations ne sont possible que dans un certain état.
Penser à vérifier l'état avant d'agir.


Les messages:
¯¯¯¯¯¯¯¯¯¯¯¯
GstMessage, ils contiennent une GstStructure permettant de créer de nombreux type de messages sans avoir à réécrire l'API.
Ils sont postés par les GstObject dans le pipeline. Les applications peuvent les récupérer via le GstBus.
[code]
	gst_bus_post(bus, gst_message_new_eos());
[/code]


Les bus:
¯¯¯¯¯¯¯
Il y en a un par objet.
[code]
	GstBus *bus = gst_element_get_bus(élément);
[/code]

Ils permettent de recueillir les messages de ces objets.

 ⋅Synchrone:
  ¯¯¯¯¯¯¯¯¯
[code]
	GstMessage *msg = gst_bus_timed_pop_filtered(bus, …);

	if (msg != NULL) {
	   switch(msg) {
	     case GST_MESSAGE_EOS:
	     …
	}
[/code]

 ⋅Asynchrone:
  ¯¯¯¯¯¯¯¯¯¯
[code]
	gst_bus_add_watch(bus, (GstBusFunc)handler, …);
	⇒ /!\ Il faut une mainloop /!\
[/code]

 ⋅Asynchrone en filtrant les messages:
  ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
[code]
	gst_bus_add_signal_watch(bus);
	⇒ /!\ Il faut une mainloop /!\

	g_signal_connect(G_OBJECT(bus), "message::<nom du message>",
			 (GCallback)message_cb, &data);
[/code]
